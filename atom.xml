<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Javier de Arcos</title>
  
  <subtitle>Blog Personal</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://javierdearcos.com/"/>
  <updated>2021-06-17T05:42:59.736Z</updated>
  <id>https://javierdearcos.com/</id>
  
  <author>
    <name>Javier de Arcos</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Despertando del País de las Maravillas</title>
    <link href="https://javierdearcos.com/2021/06/wonderland/"/>
    <id>https://javierdearcos.com/2021/06/wonderland/</id>
    <published>2021-06-15T22:00:00.000Z</published>
    <updated>2021-06-17T05:42:59.736Z</updated>
    
    <content type="html"><![CDATA[<figure>    <picture>                <source srcset="/2021/06/wonderland/e0d962be/white-rabbit@1x.webp"media="(max-width: 39.99em)"  type="image/webp" />                <source srcset="/2021/06/wonderland/e0d962be/white-rabbit@2x.webp"media="(min-width: 40em)"  type="image/webp" />                <source srcset="/2021/06/wonderland/e0d962be/white-rabbit@1x.jpg"media="(max-width: 39.99em)"  type="image/jpg" />                <source srcset="/2021/06/wonderland/e0d962be/white-rabbit@2x.jpg"media="(min-width: 40em)"  type="image/jpg" />            <img src="/2021/06/wonderland/e0d962be/white-rabbit@2x.jpg" alt="Conejo blanco en medio de la naturaleza. Foto de Hossam M. Omar en Unsplash" />    </picture></figure><p>No sé cuándo cambió mi percepción del tiempo… Recuerdo ser pequeño y sentir que el tiempo pasaba muy despacio. Pensar en que faltaban meses para Navidad, para verano, para el inicio un nuevo curso con la oportunidad de empezar de cero. Meses para el próximo partido, para la próxima carrera, para que saliera ese nuevo juego, esa película que me apetecía ver, ese viaje de fin de curso. Recuerdo ir creciendo, cambiar etapas. Recuerdo mi último verano de verdad al acabar bachillerato, tan improvisado como inolvidable. Recuerdo empezar la universidad, llegar a ese lugar por explorar que era la facultad y presentarme a desconocidos que se convertirían en grandes amigos. </p><p>Me imagino que ahí es cuando empezó… En algún momento el tiempo pasó de ir despacio a acelerarse. Y es allí cuando lo vi por primera vez. Ese conejo blanco que sacó un reloj de su chaleco y empezó a decirme al oído una frase que me ha acompañado hasta hoy: “Llegas tarde, llegas tarde, llegas tarde…”</p><a id="more"></a><h2 id="Llegas-tarde"><a href="#Llegas-tarde" class="headerlink" title="Llegas tarde"></a>Llegas tarde</h2><p>¿Cuánto tiempo ha pasado desde que empecé a perseguir a ese conejo? ¿Cuándo empecé a sentir ansiedad por el paso del tiempo? ¿Cuándo atropellaron las prisas a la ilusión y empecé esta carrera sin sentido?</p><p>Seguramente fue tras mi primer año “perdido” de universidad. Absurdo que yo mismo lo siga pensando así, pero así es como me viene siempre a la cabeza. “Perdido” porque sólo aprobé dos asignaturas en septiembre. Porque el resto del curso estuve ayudando a mi madre y acompañándola mientras superaba un cáncer, cosa que he ocultado celosamente en cualquier conversación hasta el día de hoy.</p><p>El año que más aprendí en mi vida. En el que maduré, pero también en el que sentí que me retrasaba. En el que empecé a ir corriendo a todos sitios. En el que comencé a repetirme sin parar: “Llegas tarde, llegas tarde, llegas tarde…”</p><h2 id="La-madriguera"><a href="#La-madriguera" class="headerlink" title="La madriguera"></a>La madriguera</h2><p>Y fui cayendo por una madriguera infinita. Corrí y corrí, sin preguntarme por qué y hacia dónde. Cada asignatura era un un trámite que superar y no una oportunidad para aprender. Obvié todo lo que no fueran estudios por considerarlo un lujo que no me podía permitir: asociaciones, comunidades, Erasmus, aficiones, deportes, conocer gente… Momentos que no volverán y me hubieran aportado mucho, por el miedo a seguir retrasándome. </p><p>Mientras caía, vi a compañeros disfrutar, experimentar, conseguir logros y hacer cosas admirables. Me recriminé no hacer lo mismo que ellos y al poco tiempo dejé de ver y celebrar las cosas que sí iba consiguiendo. Menos mal que al menos me permití un viaje de ecuador, al que fui medio arrastrado, rodeado de amigos y con muchos momentos maravillosos que me hacen sonreír con solo recordarlos. Aprobé mi última asignatura y qué absurdo es ahora darme cuenta que aún tengo pendiente celebrar que terminé la carrera.</p><h2 id="En-busca-del-jardin"><a href="#En-busca-del-jardin" class="headerlink" title="En busca del jardín"></a>En busca del jardín</h2><p>Y acabé en una habitación preparado para salir al mundo. Pero allí solo había una puerta muy pequeña y un frasco que decía “Bébeme”, que me enseñó que para seguir avanzando tenía que deshacerme de esa arrogancia que te da la juventud y el acabar la universidad, y reconocer lo poco que sabía y todo lo que tenía por aprender.</p><p>Participé en proyectos y usé tecnologías que me hicieron sentir muy pequeño, y adquirí conocimientos y superé retos que me hicieron sentir grande. Atravesé puertas que creía imposible atravesar, y toqué techos hasta sacar las manos y los pies fuera del edificio (o eso pensaba). </p><p>Llegué a bellos jardines. Quise quedarme pero me pudo el afán de encontrar nuevos jardines, quizás más bonitos, o el miedo a ser considerado una mala hierba y ser arrancado por la fuerza. Conocí flores extraordinarias, orugas prepotentes, y gatos cuya sonrisa parece que aún sigue ahí, flotando en el aire. Tomé por locos a aquellos que encontré por el camino, que desafiaban mi lógica y celebraban cada día con una gran fiesta, con todo lo que podía haber aprendido de ellos… </p><p>Y seguí corriendo y corriendo, persiguiendo a aquel conejo que me decía que llegaba tarde, sin saber aún a dónde.</p><h2 id="El-juicio"><a href="#El-juicio" class="headerlink" title="El juicio"></a>El juicio</h2><p>Y por fin me he dado cuenta que toda esta carrera sólo me lleva a un juicio absurdo, donde la sentencia viene antes que el veredicto, y en el que, haga lo que haga, acabaré perdiendo la cabeza. Que si bien me siento afortunado por toda esta historia que he vivido, fui demasiado rápido para poder disfrutarla como debería, con la cabeza demasiado fija en el horizonte para apreciar los detalles, detenerme y aprender aún más de ella. </p><p>Me he dado cuenta que debo dejar de perseguir a otros y tomar mi propio camino. Que a veces la mejor forma de conseguir llegar a tu destino no es correr sino caminar despacio. Que casi siempre el jurado más crítico soy yo mismo, y que también soy yo quien tengo el poder de controlar mi tamaño para sentirme más grande o más pequeño para superar los obstáculos que se me presenten.</p><h2 id="Despertar"><a href="#Despertar" class="headerlink" title="Despertar"></a>Despertar</h2><p>Y ahora que me he dado cuenta de todo esto, mi objetivo es no volver a ese “País de las maravillas”. <strong>Quiero caminar despacio, disfrutar del camino, elegir a dónde dirigirme.</strong></p><p>Y sé que no será fácil, que volverán la ansiedad y las prisas, las ganas de seguir otros caminos que no van hacia donde yo quiero, el sentirme demasiado grande o demasiado pequeño sin poder controlarlo, el olvidar quién soy y tener que parar otra vez…</p><p>Solo espero que la experiencia me sirva para no cometer los mismos errores. Que cuando el conejo blanco vuelva a decirme que llego tarde, poder contestarle que <strong>nunca llegué tarde, sino exactamente cuando me lo propuse</strong>. Aunque esa es ya otra historia para otro día.</p>]]></content>
    
    <summary type="html">
    
      La ansiedad por el paso del tiempo en mi vida
    
    </summary>
    
    
      <category term="personal" scheme="https://javierdearcos.com/categories/personal/"/>
    
    
      <category term="personal" scheme="https://javierdearcos.com/tags/personal/"/>
    
  </entry>
  
  <entry>
    <title>Pull Requests y otras herramientas de control</title>
    <link href="https://javierdearcos.com/2021/03/pull-requests/"/>
    <id>https://javierdearcos.com/2021/03/pull-requests/</id>
    <published>2021-03-09T23:00:00.000Z</published>
    <updated>2021-06-17T05:42:59.728Z</updated>
    
    <content type="html"><![CDATA[<figure>    <picture>                <source srcset="/2021/03/pull-requests/a73f316a/pull-requests@1x.webp"media="(max-width: 39.99em)"  type="image/webp" />                <source srcset="/2021/03/pull-requests/a73f316a/pull-requests@2x.webp"media="(min-width: 40em)"  type="image/webp" />                <source srcset="/2021/03/pull-requests/a73f316a/pull-requests@1x.jpg"media="(max-width: 39.99em)"  type="image/jpg" />                <source srcset="/2021/03/pull-requests/a73f316a/pull-requests@2x.jpg"media="(min-width: 40em)"  type="image/jpg" />            <img src="/2021/03/pull-requests/a73f316a/pull-requests@2x.jpg" alt="Pared llena de cámaras de seguridad. Foto de Lianhao Qu en Unsplash" />    </picture></figure><p>Desde hace tiempo es recurrente el debate acerca de las Pull Requests en nuestro sector. Espero que sea sólo mi impresión, pero me parece que es la forma de trabajo que se ha impuesto en proyectos y empresas de todo tipo. Y es que, habiendo trabajado con y sin ellas, reconozco que es una forma de trabajo a la que veo muchos inconvenientes y me preocupan sus consecuencias a largo plazo.</p><p>Tengo la sensación de que, los que llevamos más tiempo en el mundo del desarrollo, hemos cambiado las normas del juego cuando a nosotros nos ha interesado. Cuando contábamos con más experiencia, lo que nos colocaba como gente más fiable a la hora de revisar, hemos decidido adoptar un sistema en el que se debe revisar todo el código que se escribe en el equipo. Y yo me pregunto:</p><ul><li>¿Hasta qué punto esto responde a una estrategia de control y no de trabajo colaborativo?</li><li>¿A cuántos de nosotros nos han revisado cada línea de código que escribíamos cuando estábamos empezando?</li><li>¿Qué hubiera pasado si así fuera? ¿Nos hubiera ayudado a mejorar antes? ¿O hubiera causado el efecto contrario, frustrándonos, quitándonos la confianza y afectándonos profesionalmente?</li></ul><a id="more"></a><p>Seguramente dependería de quién nos hubiéramos encontrado por el camino pero, personalmente, me da miedo poner esa responsabilidad en una fuente externa. Porque el error es el mejor de los maestros y más aún cuando el que te das cuenta del error eres tú mismo a través de las consecuencias. Porque en nuestra profesión, que tiene gran parte de creatividad, no hay una única manera de hacer las cosas y puede ser perjudicial imponer una visión por encima del resto. Porque la calidad es iterativa e intentar verlo de otro modo tiene una gran parte de ingenuidad y puede impactar en el producto/proyecto y en las personas que trabajan en él.</p><p>Además hemos tomado esta decisión cuando aún, por desgracia, no hemos avanzado en una de nuestras tareas pendientes que es la de dar feedback. Nos hemos puesto a dar feedback por escrito y en asíncrono, lo cual lo hace mucho más difícil, sin haber aprendido, practicado y sin haberlo recibido antes nosotros, sobre personas que están empezando y lo que necesitan son cercanía, guía y confianza.</p><p>También me resulta curioso cuando la gente habla de que las alternativas a las Pull Requests como el pair programming o mob programming son idealistas o irrealizables. Yo me pregunto, <strong>¿en qué momento dejamos de considerar como una opción válida no ponernos a vigilar y corregir cada línea de código que hace otra persona?</strong></p><h2 id="Mis-primeros-anos-como-desarrollador"><a href="#Mis-primeros-anos-como-desarrollador" class="headerlink" title="Mis primeros años como desarrollador"></a>Mis primeros años como desarrollador</h2><p>Creo que no seré el único de los que llevamos más tiempo programando a los que les cuesta acordarse de un momento en sus primeros años de profesión en los que revisaran su código. Los momentos en los que alguien miraba mi código eran momentos de transferencia de conocimiento, al entrar en una empresa principalmente, momentos en los que estaba atascado y pedía ayuda, o momentos en los que quería enseñar o me querían enseñar una funcionalidad importante o relevante para el equipo.</p><p>Al ser momentos más espaciados los sentía como enormemente valiosos. Estaba deseoso de absorber todo el conocimiento que pudiera, y la otra persona también se dedicaba al 100% a mostrar todo aquello que le parecía importante. Eran momentos que venían después de aprendizajes, de caer en errores y frustraciones, que los hacían mucho más provechosos al haber sufrido las consecuencias de los errores y tener tiempo para digerirlo y aplicarlo.</p><p>¿Hice código de baja calidad? Por supuesto. Y me fui pegando con él, aprendiendo, mejorándolo, buscando conocimientos que me faltaban, viendo las cosas que funcionaban y las que no para crecer como desarrollador. <strong>Y llegué a la conclusión de la importancia del código limpio, de los tests y de muchas otras buenas prácticas, por mí mismo y de una forma que nunca voy a olvidar</strong>. No digo que esa sea la única forma válida, pero creo que viene bien la reflexión de cuáles son las consecuencias de los flujos de Pull Requests para la gente que está empezando, de imponer todas estas enseñanzas desde fuera y de un modo tan acelerado.</p><h2 id="Mi-quiero-y-no-puedo-con-las-Pull-Requests"><a href="#Mi-quiero-y-no-puedo-con-las-Pull-Requests" class="headerlink" title="Mi quiero y no puedo con las Pull Requests"></a>Mi quiero y no puedo con las Pull Requests</h2><p>En la anterior empresa en la que trabajé me sentía muy identificado con el proyecto en el que participaba. Entré en la empresa cuando había sólo un prototipo y me involucré totalmente para convertirlo en un producto, aplicando todos los conocimientos que tenía en ese momento e intentando asegurarme de que fuera un producto de calidad, lo que me llevó a liderarlo. </p><p>Definimos la arquitectura de manera modular, teníamos análisis estático de código, una cobertura de tests alta, y un CI con pruebas de sistema que se corrían cada noche para asegurar que todo seguía funcionando. Seguro que habría cosas que mejorar, pero a mí me parecía increíble y me sentía orgulloso y responsable de ello. </p><p>En ese momento otro de los equipos de la empresa empezaba a trabajar con el flujo de Pull Requests y yo tenía muchas ganas de implantarlo. No tuve tiempo, y me alegro de ello porque casi seguro que lo hubiera utilizado como mecanismo de control de un producto que sentía mío y me hubiera portado como un gilipollas con mis compañeros.</p><p>Con el producto más asentado entró una persona nueva al equipo que venía directamente desde la universidad. Creo que por mi forma de ser (me identifico mucho con la gente que entra a trabajar ya que me parece uno de los momentos profesionales más duros que hay) siempre he estado muy pendiente de los compañeros que se incorporan a mi equipo. En este caso, al ser más junior y liderar yo el producto, me sentí aún más en la obligación de ayudarle, mentorizarle y guiarle en lo que pudiera para que conociera el producto y por qué era importante seguir los estándares de calidad que nos habíamos marcado. </p><p>Un tiempo después, tuve que alejarme del código para ocuparme de otras tareas y mi compañero tuvo que responsabilizarse de varias funcionalidades importantes. Al volver a centrarme en desarrollar, reconozco que vi algunas cosas que no me gustaron y me arrepentí de no haber sacado el tiempo para implantar el flujo de Pull Requests. Nos juntamos, lo comentamos y fuimos mejorando juntos el código que podía tener algún problema. </p><p>Volví a tener que alejarme un poco más del código y al volver me di cuenta de que ese mismo compañero había conseguido sacar funcionalidades muy complejas con una alta calidad. <strong>No fue magia. Fue dedicación y, sobre todo, fue confianza. Confianza en que cualquier persona es capaz de crecer sin la necesidad de tener siempre a alguien corrigiéndole. También de reconocer que tu forma de hacer las cosas no es la única válida y que la calidad es iterativa.</strong></p><p>Con la perspectiva del tiempo me alegro mucho de no haber tenido el tiempo para implantar el flujo de trabajo de Pull Requests en este proyecto. Siendo síncero, en muchos momentos no hubiera tenido el tiempo suficiente para hacer una revisión en profundidad y hubiera bloqueado el trabajo de todo el equipo. No hubiera permitido fallar a una persona sin experiencia y no le hubiera visto crecer tanto como lo hizo en ese tiempo. Me hubiera sentido dueño de un código que era de todos. Y además, hubiera creado una dependencia que se hubiera vuelto contra todos, yo incluido, cuando decidí terminar esta etapa.</p><h2 id="Conclusiones"><a href="#Conclusiones" class="headerlink" title="Conclusiones"></a>Conclusiones</h2><p>Las Pull Requests son un mecanismo más a la hora de trabajar en equipo, que es útil para aceptar colaboraciones externas de personas menos familiarizadas con la base de código, como los proyectos open-source desde las que nacieron, pero que no termino de encajar en el día a día de un equipo. Pueden ser utilizadas para dar seguridad a personas que comienzan o entran en el equipo, pero el objetivo debería ser dejar de necesitarlas, no hacernos más dependientes de ellas.</p><p>Y es que, en muchos casos, los flujos de Pull Requests ocultan una necesidad de control. Desarrolladores con más experiencias nos hemos colocado como maestros del bien y del mal y hemos privado a otros desarrolladores con menos experiencia de descubrir por si mismos las mejores formas de desarrollar software. Hemos impuesto nuestra visión en un trabajo muy subjetivo, con revisiones a las que normalmente no podemos dedicar el tiempo suficiente, y que muchas veces pecan de ser demasiado caprichosas y aleatorias. Les bloqueamos constantemente, les hacemos dependientes y no les permitimos sentirse productivos en su trabajo y ganar confianza en si mismos, para también aportar sus propias ideas. Además, estamos tan centrados en ellas que muchas veces nos olvidamos de dedicar esfuerzos en sistemas de integración contínua, análisis estático del código y formación, mucho más útiles e importantes para un equipo.</p><p>No digo que haya casos en los que aplicarlo y formas positivas de trabajar con ellas, pero creo que conviene recalcar que un flujo de Pull Request:</p><ul><li>No da seguridad, ya que es difícil que revisando detectemos un error en el código.</li><li>No da consistencia, ya que su contexto está muy limitado al código que estamos cambiando.</li><li>No forma, ya que difícilmente conseguiremos enseñar o convencer a una persona con un simple comentario en su código.</li><li>No es la única forma de hacer revisiones de código, ni mucho menos la mejor.</li></ul><p>Por ello creo que los flujo de Pull Requests distan mucho de ser el estándar que aplicar a todos los proyectos y equipos, y que, al menos, es necesaria una reflexión más profunda de por qué y cómo los usamos.</p>]]></content>
    
    <summary type="html">
    
      Reflexión sobre si el flujo de Pull Requests es siempre el mejor proceso para cualquier empresa o proyecto
    
    </summary>
    
    
      <category term="desarrollo" scheme="https://javierdearcos.com/categories/desarrollo/"/>
    
    
      <category term="desarrollo" scheme="https://javierdearcos.com/tags/desarrollo/"/>
    
  </entry>
  
  <entry>
    <title>Pruebas técnicas y procesos de selección</title>
    <link href="https://javierdearcos.com/2021/02/technical-tests/"/>
    <id>https://javierdearcos.com/2021/02/technical-tests/</id>
    <published>2021-02-01T23:00:00.000Z</published>
    <updated>2021-06-17T05:42:59.732Z</updated>
    
    <content type="html"><![CDATA[<figure>    <picture>                <source srcset="/2021/02/technical-tests/e15e7552/technical-tests@1x.webp"media="(max-width: 39.99em)"  type="image/webp" />                <source srcset="/2021/02/technical-tests/e15e7552/technical-tests@2x.webp"media="(min-width: 40em)"  type="image/webp" />                <source srcset="/2021/02/technical-tests/e15e7552/technical-tests@1x.jpg"media="(max-width: 39.99em)"  type="image/jpg" />                <source srcset="/2021/02/technical-tests/e15e7552/technical-tests@2x.jpg"media="(min-width: 40em)"  type="image/jpg" />            <img src="/2021/02/technical-tests/e15e7552/technical-tests@2x.jpg" alt="Mujer concentrada anotando en un cuaderno con el portatil delante. Foto de J. Kelly Brito en Unsplash" />    </picture></figure><p>Recuerdo perfectamente la primera vez que hice una prueba técnica hace 7 años, cuando buscaba mi segunda experiencia laboral después de una beca que se alargaba demasiado. Me sorprende a mi mismo recordar el nombre de la empresa, una empresa pequeña de un sector muy específico de la que nunca he vuelto a oír hablar y que seguramente no haya oído hablar casi nadie. En ese momento no era tan común. Me había inscrito a una posición de programador que tenían abierta, y la contestación fue un correo mandándome el enunciado de una prueba técnica y las instrucciones para realizarla. </p><p>Se trataba de implementar un modelo predictivo de la temperatura en base a unos datos históricos que adjuntaban. Recuerdo sentarme entusiasmado a resolverlo. Me habían contestado para hacerme una prueba, por lo que eso parecía muy buena señal. Era un problema muy interesante y en esos momentos soñaba con seguir trabajando en campos relacionados con la Inteligencia Artificial. Recuerdo pasar varias tardes estudiando, desarrollando la solución, explicando el proceso mental que me había llevado a ella. Recuerdo enviar la respuesta ilusionado, deseoso de saber el resultado. Recuerdo esperar varios días, semanas, volver a escribir para preguntar como iba el proceso, seguir esperando…</p><p>Fue la primera prueba técnica que hice y la primera vez que no recibí ningún tipo de respuesta ni explicación. Y lamentablemente, no fue la última vez que me ha pasado esto.</p><a id="more"></a><h2 id="Mi-experiencia"><a href="#Mi-experiencia" class="headerlink" title="Mi experiencia"></a>Mi experiencia</h2><p>Desde que empecé a trabajar como desarrollador he pasado por 6 empresas. En este transcurso de tiempo he participado en muchos procesos de selección y he podido reflexionar acerca de cómo sería mi proceso ideal. También he podido estar al otro lado haciendo entrevistas en alguna de estas empresas, lo que me encanta y ha sido valiosísimo para aprender viendo a un candidato desde fuera y empatizar con su situación.</p><h3 id="Las-entrevistas"><a href="#Las-entrevistas" class="headerlink" title="Las entrevistas"></a>Las entrevistas</h3><p>Durante estos años lo cierto es que he hecho muchas entrevistas. No las he hecho de manera continuada, solo cuando he tenido la necesidad de un cambio. Pero en esos momentos sí que he querido explorar diferentes opciones para tener una visión amplia de hacia dónde me podía dirigir. </p><p>Tengo que reconocer que, incluso las primeras veces a pesar de los nervios, disfruto mucho de las entrevistas. He conocido mucha gente muy interesante, que me ha dedicado su tiempo para explicarme cómo es su empresa y en qué consiste su trabajo, muchas veces con una pasión contagiosa, y que se ha interesado por saber cuáles eran mis habilidades, mi experiencia y mis inquietudes. Por un rato he podido ver a través de sus ojos y observar diferentes sectores, perfiles, formas de ver el desarrollo, haciéndome yo mismo una imagen de cómo quería ser y lo que quería encontrar. He aprendido de mis errores, cuando mis carencias han sido evidentes, dándome pistas de que debía aprender o hacia dónde debía dirigirme para seguir mejorando como profesional.</p><p>Una gran mayoría han sido entrevistas positivas y amables. Algunas las percibí como tiempo perdido, al ser demasiado genéricas y con poca información sobre el puesto a cubrir. Y en contadas ocasiones fueron desagradables, las cuales nunca entenderé como una manera válida de evaluar a una persona para ver si encaja en tu empresa.</p><h3 id="Las-pruebas-tecnicas"><a href="#Las-pruebas-tecnicas" class="headerlink" title="Las pruebas técnicas"></a>Las pruebas técnicas</h3><p>En estos años también he tenido que hacer unas cuantas pruebas técnicas. De algunas de ellas guardo un muy bonito recuerdo por el reto que supusieron, el trato recibido durante el proceso, lo que aprendí y lo que me aportaron en su momento. Es el caso de Tuenti hace muchos años, o las más recientes con Fever, Amazon, lastminute.com y Liferay. De otras en cambio el recuerdo es más amargo, no tanto por el trato sino por el abandono y olvido después de haber dedicado muchas horas y esfuerzo.</p><p>En general me gusta hacerlas, ya que suelo ser demasiado pasivo al estudiar por mi cuenta, y han sido la excusa perfecta para construir algo concreto más cercano al mundo real y demostrarme a mi mismo que era capaz de conseguirlo. Pero también han supuesto mucho esfuerzo que ha impactado en mi vida personal. Y a veces la recompensa a todo ese esfuerzo se ha quedado muy corta.</p><h2 id="Mi-ultimo-cambio"><a href="#Mi-ultimo-cambio" class="headerlink" title="Mi último cambio"></a>Mi último cambio</h2><p>En mi último cambio laboral, el cual no buscaba al encontrarme muy feliz en mi trabajo en ese momento, pasé por 5 procesos de selección. De los 5 procesos, 4 me contactaron ellos y uno lo inicié yo al hacerme a la idea que podía venir un cambio profesional. Todos tuvieron una prueba técnica como parte del proceso. Eso supuso bastantes tardes haciendo las entrevistas previas, 5 fines de semana ocupados con las pruebas y 3 días de vacaciones para hacer la prueba final en oficina (otra moda actual). Todo esto sin contar tiempos de preparación. </p><p>De los 5 procesos que participé, de uno no tuve ningún tipo de feedback tras la prueba, cuando los que contactaron conmigo habían sido ellos, de otro me rechazaron con puntos donde podía mejorar, lo cual agradecí mucho, 2 acabaron en oferta que rechacé al no encajarme las condiciones finales y el último de ellos lo acepté siendo el puesto en el que me encuentro hoy. </p><p>Digo esto con total transparencia, no para echarme flores ni mucho menos, sino remarcar que aunque las pruebas técnicas vayan bien, muchas son solo el requisito previo para saber toda la información acerca del puesto de trabajo y condiciones, y después del tiempo invertido puedes acabar rechazando la oferta al no encajarte con lo que buscas.</p><p>Todo este proceso repercutió en mi vida personal y me afecto a mí y a mi familia, a la que le pude dedicar mucho menos tiempo cuando mis hijos tenían 1 año y 4 años. Según avanzaba en los procesos me sentía culpable por culpa de buscar un crecimiento profesional mientras descuidaba a mis hijos y ponía esa carga sobre mi mujer. Al mismo tiempo me sentía frustrado porque con los niños alrededor era complicadísimo centrarme después del trabajo y el fin de semana en estudiar o hacer dichas pruebas. Cada proceso que iniciaba empezaba con una carga extra de los procesos anteriores que por uno u otro motivo no habían acabado bien. Todo esto teniendo en cuenta que me encontraba feliz en mi trabajo y no tenía necesidad de buscar un cambio. También valorando que, aparte de esto, en 4 de los 5 procesos disfruté mucho de participar conociendo empresas y profesionales muy interesantes que me trataron de maravilla. </p><p>No me quiero imaginar esto mismo en una persona que está sufriendo en su trabajo y le urge encontrar algo. En personas que se encuentran con procesos mucho más desagradables que pueden llegar a dañar su autoestima y confianza.</p><p>Por ello creo que es necesaria la reflexión acerca de si todo el esfuerzo que se está pidiendo al candidato es necesario. Acerca de cuántas personas se están quedando fuera de oportunidades a las que les gustaría aplicar porque por sus circunstancias personales les es imposible hacer este esfuerzo. Acerca de cuántas otras están sufriendo psicológicamente por la presión de un proceso de selección de este tipo tras otro en los que no acaba de encontrar lo que buscan. <strong>Creo que es necesario reflexionar si no existen maneras más amables, menos exigentes, más inclusivas, de averiguar si una persona puede encajar en tu empresa y darle esa oportunidad.</strong> </p><h2 id="¿Pruebas-tecnicas-en-los-procesos-de-seleccion"><a href="#¿Pruebas-tecnicas-en-los-procesos-de-seleccion" class="headerlink" title="¿Pruebas técnicas en los procesos de selección?"></a>¿Pruebas técnicas en los procesos de selección?</h2><p>Debo reconocer que yo era defensor de las pruebas técnicas. Cuando hablo de pruebas técnicas me refiero a la prueba para hacer en casa sin límite de tiempo. Como he dicho antes, me gustaba hacerlas, y me daban más seguridad sobre el tipo de trabajo que iba a realizar en la empresa. Entendía que la empresa tendría una idea mucho más clara de lo que yo era capaz y no me estaba contratando a ciegas para darse luego cuenta que era un fraude. Pero mi opinión ha cambiado según he pasado por más procesos de selección. También según han crecido mis responsabilidades personales y cada vez me ha supuesto más ese esfuerzo extra, a veces exagerado, para realizarla y y ha limitado más mis opciones a la hora de buscar un nuevo trabajo.</p><p>Y es que una conversación distendida puede dar una información mucho más completa a ambas partes que una prueba de una semana. <strong>Olvidamos que un proceso de selección es bidireccional</strong>. El candidato también debe ser capaz de evaluar si la empresa y el trabajo a realizar es lo que está buscando. ya que, sólo cuando ambos estén seguros de su decisión, la incorporación será un éxito. Una prueba técnica es demasiado unidireccional, demasiado injusta en este sentido, ya que pide mucho esfuerzo y da mucha información del candidato y muy poca de la empresa. Pero eso no significa que siempre sean malas o que no puedan hacerse mejor.</p><p>En cada paso del proceso de selección ambas partes deberían dar una información y dedicación proporcional y sentir un mismo avance. Es muy cómodo poner una prueba como primer filtro para ver quién está realmente interesado y luego mirarla demasiado en diagonal para hacer el filtro duro. Por desgracia, es muy frecuente no tener ningún feedback específico que te recompense ese esfuerzo. Y al contrario de una entrevista, no vas a tener la oportunidad de indagar ni la opción de darte cuenta en directo. Es demasiado impersonal y demasiado unilateral, quitándote la posibilidad de explicarte mejor o el derecho a réplica.</p><p>Por eso cada vez me gustan más las entrevistas técnicas, ya sea en formato charla, o haciendo un ejercicio en pizarra o algo de Pair Programming. Ambos dedican el mismo tiempo, pueden ir hablando de las decisiones tomadas y el porqué. El candidato recibe una información mucho mayor de la empresa, conoce las oficinas, a alguien que trabaja allí y seguramente es de su equipo. Y ambas partes tienen toda la información que te proporcionan las sensaciones percibidas cuando hablas con alguien en directo. Puede que no sea del todo justo y haya muchas razones para limitarlo, pero al final las sensaciones importan mucho y estando en un lado y en otro de un proceso de selección, a los 5 minutos de conocer a alguien he tenido claro de que ese trabajo no era para mí o que esa persona no encajaba en lo que buscábamos. Y no es lo mismo si en ese punto del proceso has invertido 5 minutos o llevas ya invertidos 5 días.</p><h2 id="Conclusiones"><a href="#Conclusiones" class="headerlink" title="Conclusiones"></a>Conclusiones</h2><p>Las pruebas técnicas son un ejercicio válido y puede que un buen recurso para evaluar a un candidato, pero creo que las empresas deberían ser responsables y hacer la reflexión de hasta qué punto no pueden obtener una información similar exigiendo menos a la persona que hace el proceso. Hasta qué punto es una parte necesaria del proceso o ha sido incorporada porque otras empresas del sector comenzaron a hacerlas y quedaba muy bien decir que tu empresa también las hacía. </p><p>Algunas preguntas a hacerse pueden ser:</p><ul><li>¿Puedo obtener la misma información en una entrevista técnica personal o en un ejercicio de Pair Programming? </li><li>¿Es un ejercicio representativo del tipo de trabajo que el candidato va a realizar en la empresa y por lo que se le va a valorar?</li><li>¿Es justo el tiempo que le estoy pidiendo que invierta el candidato con el tiempo que estoy invirtiendo yo en él?</li><li>¿Cuántos buenos candidatos estoy dejando por el camino que en este momento no tienen tiempo para realizar mi proceso de selección y cómo afecta la diversidad de mi empresa?</li><li>¿Estoy dando la información suficiente al candidato antes de llegar a la prueba técnica?</li><li>¿Estoy haciendo la prueba técnica en el momento adecuado del proceso para solo pedir este esfuerzo a candidatos que tenga una alta probabilidad de encajar en el puesto?</li><li>¿Estoy recompensando el esfuerzo del candidato cuando le comunico que no sigue en el proceso?</li></ul><p>Por mi parte, yo cada vez valoro más mi tiempo y me gusta que las empresas donde podría trabajar algún día valoren de igual modo el tiempo de sus posibles futuros empleados. Cuando me enfrento a este procesos de varias etapas donde existe una prueba técnica me marco los siguientes objetivos:</p><ul><li>Intentar obtener la máxima información para saber si me interesa el puesto antes de seguir adelante.</li><li>No aceptar la prueba si es el primer filtro de un proceso y todavía no tengo nada o casi nada de información de la empresa o el puesto.</li><li>Acordar obtener un feedback constructivo y específico de la prueba antes de hacerla.</li><li>Pensar si el tiempo que me van a dedicar a mí (analizando la prueba y dándome feedback) es proporcional al tiempo que voy a dedicar yo.</li><li>Acotar el tiempo invertido en la prueba antes de comenzarla. Creo que en torno a 4 horas es un buen compromiso.</li><li>Documentar mi proceso de pensamiento y añadir cómo hubiera hecho ciertas funcionalidades o por dónde seguiría mejorando el ejercicio planteado, en vez de verme atrapado por el perfeccionismo y acabar echando una infinidad de horas.</li></ul><p>Por supuesto, esto es una normal general que dependerá de en qué situación me encuentre en el futuro y mi interés en el puesto, pero creo que es bueno pedir a las empresas este tipo de reflexiones y hacerlas nosotros mismos para saber hasta qué punto podemos llegar por una oportunidad sin quemarnos en el proceso.</p>]]></content>
    
    <summary type="html">
    
      Mi experiencia y opinión sobre las pruebas técnicas en procesos de selección
    
    </summary>
    
    
      <category term="carrera profesional" scheme="https://javierdearcos.com/categories/carrera-profesional/"/>
    
    
      <category term="carrera profesional" scheme="https://javierdearcos.com/tags/carrera-profesional/"/>
    
      <category term="procesos de selección" scheme="https://javierdearcos.com/tags/procesos-de-seleccion/"/>
    
  </entry>
  
  <entry>
    <title>El balance del 2020</title>
    <link href="https://javierdearcos.com/2021/01/2020/"/>
    <id>https://javierdearcos.com/2021/01/2020/</id>
    <published>2021-01-06T23:00:00.000Z</published>
    <updated>2021-06-17T05:42:59.688Z</updated>
    
    <content type="html"><![CDATA[<figure>    <picture>                <source srcset="/2021/01/2020/8b153c0a/2020@1x.webp"media="(max-width: 39.99em)"  type="image/webp" />                <source srcset="/2021/01/2020/8b153c0a/2020@2x.webp"media="(min-width: 40em)"  type="image/webp" />                <source srcset="/2021/01/2020/8b153c0a/2020@1x.jpg"media="(max-width: 39.99em)"  type="image/jpg" />                <source srcset="/2021/01/2020/8b153c0a/2020@2x.jpg"media="(min-width: 40em)"  type="image/jpg" />            <img src="/2021/01/2020/8b153c0a/2020@2x.jpg" alt="2020. Foto de Kelly Sikkema en Unsplash" />    </picture></figure><p>Ya termina el día de Reyes y, como dirían en Juego de Tronos, aquí termina mi guardia y puedo hacer balance, con un poco de retraso, de este 2020 que hemos dejado atrás. </p><p>El año 2020 ha sido, como imagino que para muchos de vosotros, uno de los años más difíciles de mi vida. Aunque teniendo en cuenta las circunstancias tan excepcionales que hemos vivido, una pandemia global que ha afectado completamente a nuestra vida, lo raro es que hubiera sido todo normal y todo positivo.</p><a id="more"></a><h2 id="El-resumen-del-ano"><a href="#El-resumen-del-ano" class="headerlink" title="El resumen del año"></a>El resumen del año</h2><p>Ha sido un año muy duro para mí en lo personal. Ha habido de todo: muertes de personas queridas, sumado a la rabia de no poder estar cerca despidiendo y acompañando en el duelo a los míos, enfermedades y la preocupación por lo que pasaría, operaciones fallidas, problemas con el seguro médico, con mi antiguo alquiler, problemas familiares que no esperaba y que dejan cicatrices… Ha sido el año del todo mal, de intentar llegar a todo y no alcanzar nada, de sentirme mal padre, mala pareja, mal profesional… Ha sido el año de la desconcentración y en el que el concepto de “yo” casi se ha perdido por completo entre tantas otras cosas más urgentes o importantes. Ha sido un año que realmente ha puesto en jaque mi salud mental. Y aún así tengo que sentirme afortunado por cómo hemos salido, pues por desgracia habrá miles de situaciones mucho peores que la mía que no puedo llegar ni a imaginar.</p><p>Pero también ha sido el año en el que he podido estar más cerca que nunca de mi familia, compartiendo momentos que de otra forma me hubiera perdido, momentos muy especiales con mis hijos tan pequeños de 1 y 4 años. El año en el que el trabajo se ha conciliado de forma más natural con el resto de mi vida. El año que nos ha hecho plantearnos cosas que no nos hubiéramos planteado de otro modo y que espero nos haya servido para tomar mejores decisiones para el futuro.</p><p>Por ello quiero confiar en eso de que la memoria es selectiva y quedarme con lo bueno.</p><h2 id="Lo-bueno-del-2020"><a href="#Lo-bueno-del-2020" class="headerlink" title="Lo bueno del 2020"></a>Lo bueno del 2020</h2><h3 id="Cambio-de-vida"><a href="#Cambio-de-vida" class="headerlink" title="Cambio de vida"></a>Cambio de vida</h3><p>La pandemia nos trajo un confinamiento duro en marzo donde fuimos más conscientes que nunca de la vida que habíamos elegido: la casa donde vivíamos, nuestros vecinos, el barrio, cómo estábamos educando a nuestros hijos. También trajo una incertidumbre en el futuro que nos llevo a replantearnos nuestra economía familiar, a la que habíamos puesto demasiada presión y que también era un factor que afectaba a nuestra familia. Todo ello nos llevo, como dice una canción de Izal, a buscar nuestro <em>cambio de vida, de ritmo y maneras</em>.</p><p>Nos habíamos mudado en septiembre de 2019 a un barrio a las afueras de Madrid. Optamos por un termino medio que creíamos nos ofrecía una vida mejor para nuestros hijos sin alejarnos demasiado, para seguir cerca de la familia y que siguiera siendo práctico para conciliar con nuestros trabajos. Pero ese termino medio no nos acababa de convencer. Habíamos perdido lo bueno de nuestro antiguo barrio más céntrico y seguíamos sin tener lo bueno de habernos alejado más de la ciudad.</p><p>Pasamos los pocos ratos libres que tuvimos en el confinamiento estricto viendo documentales de pueblos cerca de Madrid buscando otras opciones de vida. Al final nos decidimos y esperamos a que acabara el confinamiento para ponernos a buscar casa. En julio habíamos elegido y, tras un verano de gestiones con bancos, en septiembre nos mudamos a nuestra nueva casa un día antes de empezar el colegio. Un lugar más lejos de Madrid pero que no nos alejaba demasiado de la familia, cerca de la naturaleza, con opciones culturales, de deporte y en una comunidad más pequeña en la que poder participar (cuando nos dejen). Una vida más cercana, más familiar, donde espero que seamos todos felices.</p><p>Aún con el año que llevamos puedo decir que estoy muy contento con la decisión. Hemos disfrutado mucho de nuestro nuevo entorno, de los paseos por la naturaleza, del mayor espacio, de la vida más tranquila, y de lo poco que hemos podido aprovechar de la nueva zona. Quiero pensar que hemos tomado la decisión acertada, una decisión que dudo hubiéramos tomado si el 2020 no nos hubiera puesto contra las cuerdas, y que será un momento que recordemos el resto de nuestra vida como muy positivo y endulce la memoria de este año tan malo.</p><h3 id="Cambio-de-trabajo"><a href="#Cambio-de-trabajo" class="headerlink" title="Cambio de trabajo"></a>Cambio de trabajo</h3><p>El 15 de enero del 2020 comenzaba una nueva etapa profesional. Dejaba atrás la que ha sido la etapa más bonita de mi carrera profesional en <strong>Amplía IIOT</strong>, donde había liderado un producto open-source del que me siento muy orgulloso, consiguiendo unos estándares de calidad muy altos que, más allá de las <em>vanity metrics</em>, nos había permitido desarrollar y desplegar rápido y con confianza en varios proyectos en los que habíamos salido a producción, cosa que con la solución anterior habría sido imposible. También mentoricé a las nuevas incorporaciones compartiendo el limitado conocimiento que tengo, tarea con la que disfrute igual o más que desarrollando el producto. Por esto y por estar rodeado de amigos y compañeros que, además de la calidad técnica, tenían una calidad humana increíble, fui tremendamente feliz, aprendí y crecí mucho.</p><p>Pero decidí salir de la zona de confort que me había ganado y en la que podía haber seguido muchos años. Lo hice porque se me presentaron oportunidades que me permitían dar un salto hacia adelante, me retaban y en donde estaba convencido podía seguir creciendo. Y me decidí por <strong>Liferay</strong>, para trabajar con compañeros a los que admiraba, que sabían mucho más que yo y con los que tenía unas ganas enormes de trabajar. </p><p>Lo hice en un momento en el que, como sabéis, no fue ni mucho menos el más adecuado. Muchos otras personas de nuestro sector hicieron lo mismo y por unos motivos u otros la decisión no salió nada bien. Decir que, a pesar de las circunstancias, todos mis compañeros me pusieron las cosas muy fáciles y que, si en los momentos difíciles las empresas y las personas demuestran cómo son realmente, <strong>Liferay</strong> ha demostrado con creces ser un sitio genial en el que trabajar. </p><p>Ha sido un año duro. Ha habido grandes retos que no entraban en mis planes en un primer momento y que han puesto al límite mis habilidades y conocimientos. Pero al fin y al cabo ese era el plan: aprender y crecer. Y aquí sigo aprendiendo y luchando por ponerme al nivel y sentirme completamente productivo (cosa que aún no he conseguido pero espero llegue pronto), entre unos compañeros a los que admiro aún más y de los que tengo muchísimo que aprender.</p><h3 id="Participacion-en-la-comunidad"><a href="#Participacion-en-la-comunidad" class="headerlink" title="Participación en la comunidad"></a>Participación en la comunidad</h3><p>El año 2020 también me lo había planteado como el primero en el que me iba a centrar en aportar a la comunidad. Había tenido la gran suerte de que la primera vez que me atreví a mandar un Call 4 Paper a una conferencia me habían seleccionado e iba a poder estrenarme nada más y nada menos que en el <strong>T3chFest</strong>, lo que me hacía una ilusión tremenda.</p><p>Para intentar vencer al síndrome del impostor que sufría en esos momentos y que fuera el inicio de algo me abrí una nueva cuenta de Twitter para enfocarla de una manera más profesional, para poder compartir y participar con la comunidad de software, y me propuse crear un blog.</p><p>Debo reconocer que me costó cerrar mi antigua cuenta de Twitter, que utilizaba casi completamente de forma pasiva y con la que no aportaba ningún valor, pensando que iba a dejar 73 seguidores y tenía que empezar de 0…  Absurdo lo sé, pero fue así. Me lancé y lo agradezco mucho, pues me ha servido para conocer personas geniales, interactuar con gente del sector a la que admiro, aprender mucho y vencer muchos miedos y complejos de expresar opiniones y compartir conocimientos. Quería haber conseguido más, no me voy a engañar, pero tampoco quiero desmerecer lo conseguido, lo cual no ha sido fácil, y espero que sea solo el inicio de ese cambio que buscaba.</p><p>También conseguí publicar mi blog. Aunque quedé lejos del objetivo que me había puesto de escribir 6 post en lo que quedaba de año, me sirvió para aprender muchísimo. Aprendí sobre dominios, hosting, flujos de despliegue de un sitio estático, HTML y CSS, de los que hacía muchísimos años que me había olvidado y de los que sólo toqué dos cosas en su momento, … Todo eso será la base para este año seguir adelante y ponerme nuevos objetivos con el blog.</p><p>Como sabéis, el T3chFest tuvo que cancelarse y con ello mi charla, pero también trajo cosas positivas: me preparé una charla con mucha ilusión, comprobé el trato exquisito de la organización, me lancé a participar en el <strong>Liferay Symposium Spain 2020</strong> que disfrute mucho y a probar con otros C4P, aunque no saliera ninguno más. Ojalá en los <strong>T3chDays</strong> que se inauguraron hace un mes tenga la oportunidad de contaros parte de lo que quería contar y pueda compartir otros conocimientos y experiencias útiles en algún otro evento este año.</p><p>Por todo esto, este año ha sido bastante positivo en este aspecto. He vencido muchos miedos y derribado muchas barreras que espero me permitan seguir creciendo. Porque creo que una de las cosas más bonitas que tiene nuestro sector es la comunidad, porque uno de los momentos que siempre he disfrutado más es compartiendo lo que sé, porque me encanta poder interactuar con otras personas que admiro y que me hacen crecer con sus conocimientos y puntos de vista, y porque me gustaría ser una pequeñísima parte dentro de este nuestro pequeño mundo.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusión"></a>Conclusión</h2><p>2020 ha sido un año de crisis: crisis mundial, crisis personal. Y en estas crisis sólo nos queda la esperanza de que consigamos salir mejores. Espero de corazón que así sea y pueda recordar este año que terminó como el inicio de muchas cosas positivas en el mundo y en mi vida.</p>]]></content>
    
    <summary type="html">
    
      Mi balance del año 2020 intentando buscar la parte positiva.
    
    </summary>
    
    
      <category term="personal" scheme="https://javierdearcos.com/categories/personal/"/>
    
    
      <category term="personal" scheme="https://javierdearcos.com/tags/personal/"/>
    
  </entry>
  
  <entry>
    <title>Clean Code o el sentido común en la programación</title>
    <link href="https://javierdearcos.com/2020/07/clean-code/"/>
    <id>https://javierdearcos.com/2020/07/clean-code/</id>
    <published>2020-07-22T22:00:00.000Z</published>
    <updated>2021-06-17T05:42:59.700Z</updated>
    
    <content type="html"><![CDATA[<figure>    <picture>                <source srcset="/2020/07/clean-code/fa1ad4cc/m104@1x.webp"media="(max-width: 39.99em)"  type="image/webp" />                <source srcset="/2020/07/clean-code/fa1ad4cc/m104@2x.webp"media="(min-width: 40em)"  type="image/webp" />                <source srcset="/2020/07/clean-code/fa1ad4cc/m104@1x.jpg"media="(max-width: 39.99em)"  type="image/jpg" />                <source srcset="/2020/07/clean-code/fa1ad4cc/m104@2x.jpg"media="(min-width: 40em)"  type="image/jpg" />            <img src="/2020/07/clean-code/fa1ad4cc/m104@2x.jpg" alt="La Galaxia del Sombrero M104 que aparece en la portada del libro Clean Code the Uncle Bob" />    </picture></figure><p>He dudado mucho de cuál debía ser el tema de mi primera entrada técnica del blog pero una vez me vino a la cabeza no se me ocurre mejor opción.</p><p><strong>Clean Code</strong>, de Robert C. Martin, también conocido como Uncle Bob, fue el primer libro que leí por gusto una vez acabada la carrera y empezado a trabajar con el objetivo de ser mejor programador. Siento no haberlo hecho antes, pero hacerlo en ese momento, después de tener algo de experiencia y haber sufrido codificando, me hizo entenderlo y valorarlo mucho más.</p><p>Recuerdo perfectamente las sensaciones mientras lo leía, porque me pareció que todas aquellas ideas eran de sentido común. Aunque como se suele decir, a veces, el sentido común es el menos común de los sentidos.</p><p>Después de mi primer desencantamiento con el desarrollo, me sirvió para recuperar la motivación y tomar impulso, para comprender que se podían hacer las cosas mejor, que todas aquellas inquietudes y sensaciones que estaba sintiendo en el trabajo tenían sentido y eran compartidas por muchos otros.</p><a id="more"></a><h2 id="¿Que-es-Clean-Code"><a href="#¿Que-es-Clean-Code" class="headerlink" title="¿Qué es Clean Code?"></a>¿Qué es Clean Code?</h2><p>Lo primero que debemos preguntarnos es: ¿qué es el <em>código limpio</em>? El concepto es bastante abstracto. Al inicio del libro se pregunta a importantes desarrolladores de la industria qué significa para ellos y, en sus respuestas, se pueden encontrar grandes ideas concentradas en unas pocas frases. Ideas que hacen referencia a principios, patrones y buenas prácticas de desarrollo. Mis favoritas para definir qué es el código limpio son:</p><ul><li>Se lee como un buen libro.</li><li>Transmite que ha sido escrito por alguien a quien le importa su profesión.</li><li>Es elegante y sencillo. Tiene el mínimo número de elementos necesarios para cumplir su función, sin adornos ni duplicidades.</li><li>Es previsible. Cada elemento está en el lugar y hace el trabajo esperado.</li><li>Puede ser traspasado para ser mantenido y evolucionado por otros desarrolladores que no sean su autor.</li><li>Tiene tests automáticos y todos pasan.</li></ul><h2 id="Principios-del-Clean-Code"><a href="#Principios-del-Clean-Code" class="headerlink" title="Principios del Clean Code"></a>Principios del Clean Code</h2><p>Han pasado muchos años desde que leí este libro. Siempre pienso en releerlo, pero mi pila de libros pendientes no me da mucha tregua. Quizás después de escribir esta entrada sea un buen momento. </p><p>Aunque haya pasado tanto tiempo hay ideas que se me quedaron grabadas, por lo que me transmitieron al leerlas y por como he podido reafirmarlas según he seguido trabajando.</p><h3 id="La-importancia-de-los-nombres"><a href="#La-importancia-de-los-nombres" class="headerlink" title="La importancia de los nombres"></a>La importancia de los nombres</h3><p>Pasamos el día poniendo nombres: a variables, funciones, argumentos, clases, paquetes… Que lo hagamos a cada momento no significa que sea fácil o trivial. Poner nombres es muy difícil y muy importante.</p><p>Los nombres son el <strong>principal vehículo para hacer nuestro código legible</strong> y, en mi opinión, esa debe ser nuestra máxima prioridad.</p><p>Algunas buenas prácticas son:</p><ul><li>Elige nombres descriptivos, que se pueden leer y expresen por qué existe ese elemento, qué hace y cómo se usa.</li><li>Usa sustantivos para nombrar clases, objetos y variables y verbos para nombrar métodos.</li><li>Evita alargar los nombres con información que no aporte nada al significado, como palabras genéricas, prefijos o palabras que hagan referencia al contexto cuando el mismo ya está claro.</li><li>Llama de manera similar a las entidades que hacen referencia a un mismo concepto y diferéncialas de aquellas que hagan referencia a otro concepto.</li><li>Si existe un nombre para el concepto que estás usando, porque es un patrón de diseño, un algoritmo conocido o parte del dominio, úsalo. Así facilitarás la comprensión de todo aquel que conozca este concepto.</li></ul><p>Un buen nombrado requiere práctica. No te bloquees por ello pero dale la importancia necesaria. Dedica un tiempo a buscar un buen nombre y si no consigues dar con uno, vuelve más adelante para intentar mejorarlo.</p><h3 id="Pequeno-mas-pequeno"><a href="#Pequeno-mas-pequeno" class="headerlink" title="Pequeño, más pequeño"></a>Pequeño, más pequeño</h3><p>Seguro que has oído eso de que <em>las mejores esencias se guardan en frascos pequeños</em>. Piensa en ello cuando programes. Cuando veas que la función que estás implementando o la clase va creciendo pregúntate: ¿estoy manteniendo su esencia? Piensa que vas a volver a leer ese código dentro de un año, seguramente cansado, con otras cosas en la cabeza o con prisas. ¿Podrías mantener la concentración para leerla entera y entender lo que hace? ¿Y si lo tiene que hacer otra persona?</p><p>Haz clases pequeñas, métodos pequeños, que se encarguen de <strong>hacer una única cosa, de hacerla bien y de no hacer nada más</strong>. Mantén el mismo nivel de abstracción para que se lean fácilmente.</p><p>Este consejo tan sencillo puede mejorar mucho tu formar de desarrollar. Y aquí termino este punto para predicar con el ejemplo ;)</p><h3 id="Sin-comentarios"><a href="#Sin-comentarios" class="headerlink" title="Sin comentarios"></a>Sin comentarios</h3><p>Los comentarios son, en general, una confesión de que no has sabido hacer tu código legible. Suponen un sobresfuerzo que intenta resolver una carencia cometida en el código, cuando ese sobresfuerzo sería mucho más útil dedicarlo a la fuente del problema. </p><p>En mi opinión, dificultan más de lo que ayudan, ya que es como si, leyendo un libro, tuvieras que cambiar de idioma en mitad de una página para entender la historia y seguir leyendo. Además es muy sencillo que se pasen por alto o queden desactualizados, por lo que se corre el riesgo de que confundan aún más al desarrollador explicando algo que ya no está ahí.</p><p>Por eso, mi norma es no usar comentarios, forzarme a conseguir <strong>toda la expresividad a través del código</strong>. A veces es tan sencillo como extraer una función con un nombre similar al comentario que tenías en la cabeza, o cambiar el nombre de las variables involucradas. Otras veces es una señal para cambiar el enfoque de la solución, ya que el elegido es muy confuso.</p><p>Existen dos tipos de comentarios que sí son necesarios o útiles:</p><ol><li>Javadoc de las APIs públicas: Es importante documentar tus APIs públicas, para que otros desarrolladores puedan usarlas.</li><li>TODOs: Los TODOs son útiles para dejar anotada una idea en una parte del código a la que volverás luego. Con luego me refiero a antes de terminar el día, ya que si no lo has hecho al terminar el día, seguramente no lo hagas al terminar la semana, ni el mes, ni el año…</li></ol><h3 id="Cuida-tu-privacidad"><a href="#Cuida-tu-privacidad" class="headerlink" title="Cuida tu privacidad"></a>Cuida tu privacidad</h3><p>Al aprender a programar parece que, en nuestro afán por enseñarle al mundo nuestras hazañas, tendemos a hacer todas nuestras clases y funciones públicas, sin darnos cuenta de las consecuencias de esta decisión. Cada clase o función que hacemos pública es un compromiso que adquirimos con nuestros usuarios y compañeros que deberemos mantener en el futuro. Recuerda que <strong>somos esclavos de nuestras interfaces y dueños de nuestras implementaciones</strong>.</p><p>También debemos cuidarnos de depender de implementaciones y de la estructura interna de otras clases ya que, aunque no debieran, éstas pueden cambiar rompiendo nuestro código. Sobre esto nos habla la <strong>Ley de Demeter</strong>, que nos dice que una función de nuestra clase sólo debe llamar a métodos de: la misma clase, miembros de la clase, objetos creados por la función u objetos pasados como parámetro a la función.</p><p>Nuestra tendencia debe ser minimizar la visibilidad de nuestras clases y funciones y minimizar también las dependencias con otras clases, de forma que mantengamos la mayor libertad para evolucionar nuestro código.</p><h3 id="Tests"><a href="#Tests" class="headerlink" title="Tests"></a>Tests</h3><p>Una de las herramientas más potentes para mejorar nuestro código son las pruebas automáticas. </p><p>Los tests nos permiten ponernos a prueba, confirmando nuestras intenciones, verificando que el código hace lo que queremos, y cambiando de perspectiva al usar nuestro código desde fuera, evaluando su diseño y observando así sus virtudes y carencias. </p><p>Para implementar nuestros tests debemos pensar en el acrónimo <strong>FIRST</strong>. Los tests deben ser:</p><ul><li>Rápidos (fast), para ejecutarlos continuamente.</li><li>Independientes (independent) de otros, para dirigirnos hacia el código que falla.</li><li>Repetibles (repeatable) en cualquier entorno, para ejecutarlos en cualquier lugar y por cualquier persona con los mismos resultados.</li><li>Autovalidables (self-validating), para indicarnos objetivamente si el test pasa o falla</li><li>Cercanos en tiempo al código que prueba (timely), para retroalimentar nuestro código y permitirnos mejorarlo.</li></ul><p>Además, nuestros tests forman parte de nuestro código y tenemos que tener el mismo cuidado y usar los mismos principios de <em>código limpio</em> para que sean legibles y mantenibles.</p><p>Pensando en los tests siempre me acuerdo del programa MasterChef y la habitual pregunta: <em>¿Pero tú has probado el plato?</em>. Parece obvio, pero no lo es. Adquiere el habito de probar tu código para detectar los errores antes que nadie y darte cuenta de las deficiencias de tu diseño, y mejorarás enormemente tus habilidades y tu descanso.</p><h3 id="Code-smells"><a href="#Code-smells" class="headerlink" title="Code smells"></a>Code smells</h3><p>Según escribes o lees código, seguro que has notado muchas veces una mala sensación al ver ciertas estructuras o patrones. Esta sensación es la que comúnmente se llama <strong>code smell</strong>. Es importante entrenar estas sensaciones para poder detectar posibles fuentes de error o de un mal diseño, y corregirlas antes de que causen problemas. </p><p>Según ganes experiencia y sigas aprendiendo, aumenta tu catálogo de smells viendo ejemplos y contraejemplos de las tecnologías que usas para que tus sensaciones sean cada vez más fiables y te indiquen puntos de mejora. Apoyate también en tu IDE y en herramientas de análisis estático de código. En el libro <strong>Clean Code</strong> se muestran muchos de ellos que puedes ir interiorizando.</p><h2 id="La-regla-del-Boy-Scout"><a href="#La-regla-del-Boy-Scout" class="headerlink" title="La regla del Boy Scout"></a>La regla del Boy Scout</h2><p>Escribir código limpio es un proceso. No te obsesiones con la perfección, la perfección no existe. Si intentas que el código siga todas y cada una de las prácticas del código limpio desde un primer momento seguramente esto te lleve a la frustración y al bloqueo, sobre todo cuando tengas que programar sobre un código que no sea tuyo. </p><p>Mi consejo es que vayas incorporando poco a poco los principios de código limpio en tu día y los tengas en cuenta a la hora de programar. Aplica la regla del Boy Scout: <strong>deja el código por el que pasas un poco más limpio que como lo encontraste</strong>.</p><p>Pero cuidado, ¿recuerdas que el código perfecto no existe? Tenlo en cuenta cuando leas código que ha escrito otra persona. No pienses que algo está mal porque tú lo hubieras hecho de otra manera. Reflexiona antes de cambiarlo y piensa realmente si los cambios mejoran la legibilidad y/o mantenibilidad del código. De igual manera, no tomes como algo personal si alguien cambia tu código. Sé por experiencia que es difícil interiorizarlo, pero <em>tú no eres tú código</em>. Admite consejos, modificaciones y aprende de las diferentes perspectivas que te muestran tus compañeros.</p><h2 id="Un-lugar-perfecto-por-el-que-empezar"><a href="#Un-lugar-perfecto-por-el-que-empezar" class="headerlink" title="Un lugar perfecto por el que empezar"></a>Un lugar perfecto por el que empezar</h2><p>Recuerdo leer <strong>Clean Code</strong> como un momento importante en mi carrera profesional y un cambio en la forma de ver el desarrollo. Quizás tiene que ver que fuera el primero pero lo sigo considerando, después de muchos libros ténicos leídos, entre los 5 que más me han impactado.</p><p>Me parece el libro ideal para cualquier persona que esté empezando en el mundo de la programación. Por si solo contiene muchos consejos y prácticas sencillas de entender y aplicar que pueden mejorar enormemente tu manera de programar. Además hace referencia a importantes principios de desarrollo (SOLID, DRY, …), técnicas (TDD) y una bibliografía extraordinaria para seguir aprendiendo.</p><p>Este libro me puso en el camino para <strong>*ser mejor programador</strong>. En esta entrada sólo he hecho mención a algunos conceptos que incluye que se me quedaron marcados por su sencillez e importancia, por eso te recomiendo que si no lo has leído todavía lo tengas en cuenta entre tus próximas lecturas.<br><br><br><em>* Cuando pienses en ser mejor programador sólo debes tener a una persona en mente: a ti mismo. Mejora para sentirte más seguro, para reducir el estrés, para disfrutar más de esta profesión. Sigue estudiando y practicando para poder enfrentarte a problemas más difíciles y conseguir soluciones más eficaces y mantenibles. Y, como he dicho antes, no te obsesiones con la perfección, disfruta del proceso.</em></p>]]></content>
    
    <summary type="html">
    
      Cuáles son los puntos más importantes del código limpio en mi experiencia.
    
    </summary>
    
    
      <category term="principios, patrones y prácticas de programación" scheme="https://javierdearcos.com/categories/principios-patrones-y-practicas-de-programacion/"/>
    
    
      <category term="desarrollo" scheme="https://javierdearcos.com/tags/desarrollo/"/>
    
  </entry>
  
</feed>
